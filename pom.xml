<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<name>mvn-ejb3-jpa</name>
	<modelVersion>4.0.0</modelVersion>
	<groupId>co.adun</groupId>
	<artifactId>mvnejb3jpa</artifactId>
	<version>0.1</version>
	<packaging>pom</packaging>

	<modules>		
		<module>core</module>
		<module>persistence</module>
		<module>security</module>
		<module>business</module>
		<module>integration</module>
		<module>web</module>
		<module>ear</module>
	</modules>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Define the version of JBoss' Java EE 6 APIs and Tools we want 
            to import. -->
        <!-- Certified version of the JBoss EAP components we want to use -->
        <version.jboss.bom>1.0.2.Final-redhat-1</version.jboss.bom>
        <!-- Alternatively, comment out the above line, and un-comment the 
            line below to use version 1.0.4.Final which is based on community built dependencies. -->
        <!-- <version.jboss.bom>1.0.4.Final</version.jboss.bom> -->
		<version.jboss.maven.plugin>7.3.Final</version.jboss.maven.plugin>

		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import. -->
		<version.jboss.bom>1.0.4.Final</version.jboss.bom>
		<version.jboss.as>7.2.0.Final</version.jboss.as>

		<!-- other plugin versions -->
		<version.compiler.plugin>2.4</version.compiler.plugin>
		<version.surefire.plugin>2.4.3</version.surefire.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>
		<version.ear.plugin>2.6</version.ear.plugin>
		<version.ejb.plugin>2.3</version.ejb.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>

		<!-- Spring version -->
		<version.spring>3.2.2.RELEASE</version.spring>
		<version.spring.security>3.1.3.RELEASE</version.spring.security>

		<!-- Spring Third Party dependencies -->
		<version.aopalliance>1.0</version.aopalliance>

		<!-- Third Party dependencies -->
		<version.aspectj>1.7.2</version.aspectj>
		<version.standard.taglibs>1.1.2</version.standard.taglibs>
		<version.commons.logging>1.1.1</version.commons.logging>
		<version.log4j>1.2.17</version.log4j>
		<version.junit>4.10</version.junit>
		<version.tiles>2.1.2</version.tiles>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat 
				ourselves in every module -->
			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>core</artifactId>
				<version>0.1</version>
				<type>jar</type>
			</dependency>

			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>security</artifactId>
				<version>0.1</version>
				<type>jar</type>
			</dependency>

			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>persistence</artifactId>
				<version>0.1</version>
				<type>ejb</type>
			</dependency>

			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>business</artifactId>
				<version>0.1</version>
				<type>ejb</type>
			</dependency>
            
			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>integration</artifactId>
				<version>0.1</version>
				<type>ejb</type>
			</dependency>

			<!-- Define the version of the WAR so that we don't need to repeat ourselves 
				in every module -->
			<dependency>
				<groupId>co.adun</groupId>
				<artifactId>web</artifactId>
				<version>0.1</version>
				<type>war</type>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate 
				stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Declare the APIs we depend on and need for compilation. All of them 
			are provided by JBoss AS 7 -->

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Test scope dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- LOGGING -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${version.log4j}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Java EE container provided -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure 
					the jboss-as maven plugin to skip deployment for all modules. We then enable 
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>${version.jboss.maven.plugin}</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<aggregate>true</aggregate>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<pluginRepositories>
		<pluginRepository>
			<id>JBOSS-PLUGIN-REPO</id>
			<name>JBOSS-PLUGIN-REPO</name>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
		</pluginRepository>
		<pluginRepository>
			<id>codehaus snapshot repository</id>
			<url>http://snapshots.repository.codehaus.org</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
	        <id>springsource-milestones</id>
	        <name>SpringSource Milestones Proxy</name>
	        <url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
		</pluginRepository>
	</pluginRepositories>

</project>
