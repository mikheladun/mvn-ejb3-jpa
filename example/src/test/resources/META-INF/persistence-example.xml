<persistence version="2.0"
   xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
        http://java.sun.com/xml/ns/persistence
        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
   <persistence-unit name="persistenceUnitExample" transaction-type="RESOURCE_LOCAL">
      <!-- If you are running in a production environment, add a managed 
         data source, this example data source is just for development and testing! -->
      <!-- The datasource is deployed as WEB-INF/spring-quickstart-ds.xml, you
         can find it in the source at src/main/webapp/WEB-INF/spring-quickstart-ds.xml -->
      <provider>org.hibernate.ejb.HibernatePersistence</provider>
      
      <class>co.adun.mvnejb3jpa.persistence.entity.ExampleEntity</class>

	  	<exclude-unlisted-classes>true</exclude-unlisted-classes>

      <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
      <validation-mode>CALLBACK</validation-mode>

      <properties>
		 <!-- 
		 <property name="jboss.entity.manager.factory.jndi.name" value="java:jboss/EntityManagerFactory" />
		 <property name="hibernate.transaction.factory_class" value="org.hibernate.transaction.JTATransactionFactory"/>
		 <property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.JBossTransactionManagerLookup"/>
		 <property name="hibernate.transaction.auto_close_session" value="true"/>
		 -->
         <property name="hibernate.archive.autodetection" value="class, hbm" />
		 <!-- Manage database schema on startup -->
		 <!-- * validate: validate the schema, makes no changes to the database. 
              * update: update the schema. 
              * create: creates the schema, destroying previous data.
              * create-drop: drop the schema at the end of the session. -->
         <property name="hibernate.hbm2ddl.auto" value="validate" />
         <!-- Recommended by Hibernate Annotations - 2.2.3.1. Generating the identifier property -->        
         <property name="hibernate.id.new_generator_mappings" value="true"/>
         <property name="hibernate.show_sql" value="true" />
	  	 <property name="hibernate.format_sql" value="true" />
	  	 <property name="hibernate.max_fetch_depth" value="4" />
		 <property name="hibernate.cache.use_second_level_cache" value="false" />
		 <property name="hibernate.cache.use_query_cache" value="false" />
		 <property name="hibernate.cache.use_minimal_puts" value="true" />
		 <!-- Disable the second-level cache  --> 
  		 <property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
  		 <!-- SQL dialect -->
  		 <property name="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect" />
  		 <!-- JDBC connection pool (use the built-in) -->
  		<property name="hibernate.connection.pool_size" value="5" />
      </properties>
   </persistence-unit>
</persistence>