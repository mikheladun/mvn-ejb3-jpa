package co.adun.mvnejb3jpa.persistence.entity;

// Generated May 5, 2013 9:04:21 PM by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * LtAssociatedLead generated by hbm2java
 */
@Entity
@Table(name = "LT_LEAD_ASSOCIATED")
public class LtAssociatedLead extends BaseEntity {

    private CompositeId id;
    private LtLead ltLeadByLtAssociatedLeadId;
    private LtUser ltUserByModifiedBy;
    private LtLead ltLeadByLtLeadId;
    private LtUser ltUserByCreateBy;
    private Date createDate;
    private Date modifiedDate;

    public LtAssociatedLead() {
    }

    public LtAssociatedLead(CompositeId id, LtLead ltLeadByLtAssociatedLeadId, LtUser ltUserByModifiedBy, LtLead ltLeadByLtLeadId,
	    LtUser ltUserByCreateBy, RelationshipCode relationshipCode, Date createDate, Date modifiedDate) {
	this.id = id;
	this.ltLeadByLtAssociatedLeadId = ltLeadByLtAssociatedLeadId;
	this.ltUserByModifiedBy = ltUserByModifiedBy;
	this.ltLeadByLtLeadId = ltLeadByLtLeadId;
	this.ltUserByCreateBy = ltUserByCreateBy;
	this.createDate = createDate;
	this.modifiedDate = modifiedDate;
    }

    @EmbeddedId
    @AttributeOverrides({ @AttributeOverride(name = "id", column = @Column(name = "ID", nullable = false, precision = 22, scale = 0)),
	    @AttributeOverride(name = "compId", column = @Column(name = "LT_LEAD_ID", nullable = false, precision = 22, scale = 0)) })
    public CompositeId getId() {
	return this.id;
    }

    @XmlElement
    public void setId(CompositeId id) {
	this.id = id;
    }

    @MapsId(value = "id")
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID", nullable = false, insertable = false, updatable = false)
    public LtLead getLtLeadByLtAssociatedLeadId() {
	return this.ltLeadByLtAssociatedLeadId;
    }

    @XmlTransient
    public void setLtLeadByLtAssociatedLeadId(LtLead ltLeadByLtAssociatedLeadId) {
	this.ltLeadByLtAssociatedLeadId = ltLeadByLtAssociatedLeadId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MODIFIED_BY", nullable = false)
    public LtUser getLtUserByModifiedBy() {
	return this.ltUserByModifiedBy;
    }

    @XmlTransient
    public void setLtUserByModifiedBy(LtUser ltUserByModifiedBy) {
	this.ltUserByModifiedBy = ltUserByModifiedBy;
    }

    @MapsId(value = "compId")
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "LT_LEAD_ID", nullable = false, insertable = false, updatable = false)
    public LtLead getLtLeadByLtLeadId() {
	return this.ltLeadByLtLeadId;
    }

    @XmlTransient
    public void setLtLeadByLtLeadId(LtLead ltLeadByLtLeadId) {
	this.ltLeadByLtLeadId = ltLeadByLtLeadId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATE_BY", nullable = false)
    public LtUser getLtUserByCreateBy() {
	return this.ltUserByCreateBy;
    }

    @XmlTransient
    public void setLtUserByCreateBy(LtUser ltUserByCreateBy) {
	this.ltUserByCreateBy = ltUserByCreateBy;
    }

    @Column(name = "CREATE_DATE", nullable = false)
    public Date getCreateDate() {
	return this.createDate;
    }

    @XmlElement
    public void setCreateDate(Date createDate) {
	this.createDate = createDate;
    }

    @Column(name = "MODIFIED_DATE", nullable = false)
    public Date getModifiedDate() {
	return this.modifiedDate;
    }

    @XmlElement
    public void setModifiedDate(Date modifiedDate) {
	this.modifiedDate = modifiedDate;
    }

}
